/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* rev(struct ListNode* head, int n)
{
    if(NULL == head || NULL == head->next) return head;
    
    struct ListNode *p1, *p2, *t;
    p1 = NULL;
    p2 = head;
    t = head->next;

    for(int i = 0; i < n; i++)
    {
        p2->next = p1;
        p1 = p2;
        p2 = t;
        t = t != NULL ? t->next : NULL;
    }
    if(p2 != NULL)
    {
        head->next = p2;
    }
    return p1;
}

struct ListNode* reverseBetween(struct ListNode* head, int left, int right) {
    if(NULL == head || NULL == head->next) return head;
    if(1 == left ) return rev(head, right - left + 1);
    
    struct ListNode* ptr = head;
    for(int i = 1; i < left-1; i++)
    {
        ptr = ptr->next;
    }
    ptr->next = rev(ptr->next, right - left + 1);
    return head;
}
